<?php

namespace App\Models;

use Carbon\Carbon;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class GeneralData extends Model
{
    use HasFactory;

    protected $table = 'general_data';

    public $timestamps = false;

    protected $fillable = [
        'LastCheckAnalogsDate'
    ];

    // переопределение данных
    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        static::retrieved(function($model){
            $model->phones = trim($model->phones);
            $model->phones = preg_replace(
                array(
                    '/[\+]?([7|8])[-|\s]?\([-|\s]?(\d{3})[-|\s]?\)[-|\s]?(\d{3})[-|\s]?(\d{2})[-|\s]?(\d{2})/',
                    '/[\+]?([7|8])[-|\s]?(\d{3})[-|\s]?(\d{3})[-|\s]?(\d{2})[-|\s]?(\d{2})/',
                    '/[\+]?([7|8])[-|\s]?\([-|\s]?(\d{4})[-|\s]?\)[-|\s]?(\d{2})[-|\s]?(\d{2})[-|\s]?(\d{2})/',
                    '/[\+]?([7|8])[-|\s]?(\d{4})[-|\s]?(\d{2})[-|\s]?(\d{2})[-|\s]?(\d{2})/',
                    '/[\+]?([7|8])[-|\s]?\([-|\s]?(\d{4})[-|\s]?\)[-|\s]?(\d{3})[-|\s]?(\d{3})/',
                    '/[\+]?([7|8])[-|\s]?(\d{4})[-|\s]?(\d{3})[-|\s]?(\d{3})/',
                ),
                array(
                    '+7 ($2) $3-$4-$5',
                    '+7 ($2) $3-$4-$5',
                    '+7 ($2) $3-$4-$5',
                    '+7 ($2) $3-$4-$5',
                    '+7 ($2) $3-$4',
                    '+7 ($2) $3-$4',
                ),
                $model->phones
            );

//            $direct_phone = Agent::where('id', $model->agent_id)->first();
//
//            if($direct_phone->direct_phone){
//                $model->direct_phone = $direct_phone->direct_phone;
//
//                $model->direct_phone = trim($model->direct_phone);
//
//                $model->direct_phone = preg_replace(
//                    array(
//                        '/[\+]?([7|8])[-|\s]?\([-|\s]?(\d{3})[-|\s]?\)[-|\s]?(\d{3})[-|\s]?(\d{2})[-|\s]?(\d{2})/',
//                        '/[\+]?([7|8])[-|\s]?(\d{3})[-|\s]?(\d{3})[-|\s]?(\d{2})[-|\s]?(\d{2})/',
//                        '/[\+]?([7|8])[-|\s]?\([-|\s]?(\d{4})[-|\s]?\)[-|\s]?(\d{2})[-|\s]?(\d{2})[-|\s]?(\d{2})/',
//                        '/[\+]?([7|8])[-|\s]?(\d{4})[-|\s]?(\d{2})[-|\s]?(\d{2})[-|\s]?(\d{2})/',
//                        '/[\+]?([7|8])[-|\s]?\([-|\s]?(\d{4})[-|\s]?\)[-|\s]?(\d{3})[-|\s]?(\d{3})/',
//                        '/[\+]?([7|8])[-|\s]?(\d{4})[-|\s]?(\d{3})[-|\s]?(\d{3})/',
//                    ),
//                    array(
//                        '+7 ($2) $3-$4-$5',
//                        '+7 ($2) $3-$4-$5',
//                        '+7 ($2) $3-$4-$5',
//                        '+7 ($2) $3-$4-$5',
//                        '+7 ($2) $3-$4',
//                        '+7 ($2) $3-$4',
//                    ),
//                    $model->direct_phone
//                );
//            }

            $value = (($model->price_actual-$model->auction)-$model->price_sale);
            // $value = ((1650000 - 0) - 0)
            // $value = 1650000

            if($value > 0)
                //$model->percentage_income = round(($model->price_actual - $model->auction) / $value);
                $model->percentage_income = round(($model->price_actual - $model->auction) / ($model->price_actual - $model->auction - $model->price_sale));
                // percentage_income = round((1.65 - 0) / 1.65 - 0) = 1
            else
                $model->percentage_income = 0;

            if($model->price_start){
                $model->_izmen = round(((($model->price_actual/$model->price_start)-1)*100)) . "%";
            } else {
                $model->_izmen = "";
            }

            $sootn_sign = strpos($model->sootn, '-') === 0 ? '' : '+';
            $model->_soot = $sootn_sign . round($model->sootn) . '%';

            $sootn_analog_sign = strpos($model->sootn_analog, '-') === 0 ? '' : '+';
            if(round($model->sootn_analog) != 0){
                $model->_soot_analog = $sootn_analog_sign . round($model->sootn_analog) . '%';
            }else{
                $model->_soot_analog = '0%';
            }

            if(empty($model->notRemovedAnalogAdsAvgPrice)){
                $model->notRemovedAnalogAdsCount = "";
            }else{
                $higherThanMarketPrice = $model->square_meter_price2 > $model->notRemovedAnalogAdsAvgPrice ? false : true;
                if ($model->square_meter_price) {
                    // square_meter_price = 54.28
                    // notRemovedAnalogAdsAvgPrice = 55402
                    $sootn_square_meter_price_to_analogs = (100-round(($model->notRemovedAnalogAdsAvgPrice*100)/$model->square_meter_price));
                } else {
                    $sootn_square_meter_price_to_analogs = 0;
                }

                // .($higherThanMarketPrice ? '+' : '-')
                $notRemovedAnalogAdsAvgPriceSign = strpos($sootn_square_meter_price_to_analogs, '-') === 0 ? "" : "+";
                $model->notRemovedAnalogAdsAvgPrice = $notRemovedAnalogAdsAvgPriceSign."{$sootn_square_meter_price_to_analogs}%";
            }

            // к каждой дате прибавляем 3 часа
            // т.к. время в unix метке, если переводим, то получается 21:00 часа по Гринвичу
            // Разница Москвы и Гринвича 3 часа
            // по этому к дате прибавляем 3 часа
            // и конвертируем

            $model->ad_published = $model->ad_published == 0 ? "" : Carbon::createFromTimestamp(intval($model->ad_published))->format('d-m-Y');
            $model->ad_added = $model->ad_added == 0 ? "" : Carbon::createFromTimestamp(intval($model->ad_added))->format('d-m-Y');
            $model->ad_remove = $model->ad_remove == 0 ? "" : Carbon::createFromTimestamp(intval($model->ad_remove))->format('d-m-Y');
            $model->ad_updated = $model->ad_updated == 0 ? "" : Carbon::createFromTimestamp(intval($model->ad_updated))->format('d-m-Y');

            $model->date_of_purchase_transaction = $model->date_of_purchase_transaction == NULL ? "" : Carbon::parse($model->date_of_purchase_transaction)->format("d-m-Y");
            $model->offer_date = $model->offer_date == NULL ? "" : Carbon::parse($model->offer_date)->format("d-m-Y");
            $model->purchase_advance_date = $model->purchase_advance_date == NULL ? "" : Carbon::parse($model->purchase_advance_date)->format("d-m-Y");
            $model->sale_advertising_date = $model->sale_advertising_date == NULL ? "" : Carbon::parse($model->sale_advertising_date)->format("d-m-Y");
            $model->date_of_sale_advance = $model->date_of_sale_advance == NULL ? "" : Carbon::parse($model->date_of_sale_advance)->format("d-m-Y");
            $model->date_of_transaction_sale = $model->date_of_transaction_sale == NULL ? "" : Carbon::parse($model->date_of_transaction_sale)->format("d-m-Y");

            $model->price_actual_to_current_day = round(($model->price_actual/1000000), 2);
            $model->price_sale = round(($model->price_sale/1000000), 2);
            $model->price_start = round(($model->price_start/1000000), 2);
            $model->square_meter_price = round(($model->square_meter_price/1000), 2);
            $model->_fakt = round((($model->price_actual - $model->auction) / 1000000), 2);
            $model->price_actual = round(($model->price_actual/1000000), 2);
            $model->auction = $model->auction / 1000000;

            $model->have_doubles = $model->have_doubles == 0 ? "Нет" : "Да";

            if($model->id_source == 1){ $model->id_source = "Циан"; }
            else if($model->id_source == 2){ $model->id_source = "Авито"; }
            else {$model->id_source = "ОШИБКА"; }

            if(strripos($model->SootSAnSgdn, "-") === 0){
                if(trim($model->SootSAnSgdn, "-%") == 0){
                    $model->_soot_analog_to_current = "0%";
                }
            }else{
                $model->_soot_analog_to_current = $model->SootSAnSgdn;
            }



            if(!empty($model->grand_avit)) $model->grand_avit = round((intval($model->grand_avit)/1000000), 2);
            if(!empty($model->grand_cian)) $model->grand_cian = round((intval($model->grand_cian)/1000000), 2);

            $model->target_profit = intval($model->price_sale * 1000000) - intval($model->price_actual * 1000000) + intval($model->auction * 1000000);
            $model->target_profit = round(($model->target_profit / 1000000), 2);

            $coords = explode(',', $model->coords);
            if(!empty($coords[0]) && !empty($coords[1]))
                $model->coords = $coords[0] . " " . $coords[1];

            if($model->price_sale == 0){

            }

            if($model->count_analog > 0){
                //_soot_analog
            }

            if($model->isAdsApi == 1){
                $model->isAdsApi = "Ads Api";
            }else if($model->isAdsApi == 0){
                $model->isAdsApi = "Носов";
            }
        });
    }
}
